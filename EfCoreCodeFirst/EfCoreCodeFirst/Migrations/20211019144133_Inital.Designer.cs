// <auto-generated />
using System;
using EfCoreCodeFirst.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EfCoreCodeFirst.Migrations
{
    [DbContext(typeof(EfContext))]
    [Migration("20211019144133_Inital")]
    partial class Inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AbteilungMitarbeiter", b =>
                {
                    b.Property<int>("AbteilungenId")
                        .HasColumnType("int");

                    b.Property<int>("MitarbeiterId")
                        .HasColumnType("int");

                    b.HasKey("AbteilungenId", "MitarbeiterId");

                    b.HasIndex("MitarbeiterId");

                    b.ToTable("AbteilungMitarbeiter");
                });

            modelBuilder.Entity("EfCoreCodeFirst.Model.Abteilung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bezeichnung")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Abteilungen");
                });

            modelBuilder.Entity("EfCoreCodeFirst.Model.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("GebDatum")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("EfCoreCodeFirst.Model.Kunde", b =>
                {
                    b.HasBaseType("EfCoreCodeFirst.Model.Person");

                    b.Property<int?>("AnsprechpartnerId")
                        .HasColumnType("int");

                    b.Property<string>("Kundennummer")
                        .IsRequired()
                        .HasMaxLength(49)
                        .HasColumnType("nvarchar(49)");

                    b.HasIndex("AnsprechpartnerId");

                    b.ToTable("Kunde");
                });

            modelBuilder.Entity("EfCoreCodeFirst.Model.Mitarbeiter", b =>
                {
                    b.HasBaseType("EfCoreCodeFirst.Model.Person");

                    b.Property<string>("Beruf")
                        .IsRequired()
                        .HasMaxLength(48)
                        .HasColumnType("nvarchar(48)");

                    b.ToTable("Mitarbeiter");
                });

            modelBuilder.Entity("AbteilungMitarbeiter", b =>
                {
                    b.HasOne("EfCoreCodeFirst.Model.Abteilung", null)
                        .WithMany()
                        .HasForeignKey("AbteilungenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EfCoreCodeFirst.Model.Mitarbeiter", null)
                        .WithMany()
                        .HasForeignKey("MitarbeiterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfCoreCodeFirst.Model.Kunde", b =>
                {
                    b.HasOne("EfCoreCodeFirst.Model.Mitarbeiter", "Ansprechpartner")
                        .WithMany("Kunden")
                        .HasForeignKey("AnsprechpartnerId");

                    b.HasOne("EfCoreCodeFirst.Model.Person", null)
                        .WithOne()
                        .HasForeignKey("EfCoreCodeFirst.Model.Kunde", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();

                    b.Navigation("Ansprechpartner");
                });

            modelBuilder.Entity("EfCoreCodeFirst.Model.Mitarbeiter", b =>
                {
                    b.HasOne("EfCoreCodeFirst.Model.Person", null)
                        .WithOne()
                        .HasForeignKey("EfCoreCodeFirst.Model.Mitarbeiter", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EfCoreCodeFirst.Model.Mitarbeiter", b =>
                {
                    b.Navigation("Kunden");
                });
#pragma warning restore 612, 618
        }
    }
}
